# docker-compose.data-pipeline.yml
version: '3.8'
services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=training_data
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: semitechnologies/weaviate:1.19.6
    container_name: weaviate_db
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=20
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
    volumes:
      - weaviate-data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  rapids-processing:
    image: nvcr.io/nvidia/rapidsai/base:25.02-cuda12.8-py3.12
    container_name: rapids_processing
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
      - ./data:/app/data
    ports:
      - "7500:7500"
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=postgres
      - WEAVIATE_URL=http://weaviate:8080
    command: python -m src.backend.ai.data_processing.service
    depends_on:
      - postgres
      - weaviate
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  data-pipeline:
    image: nvcr.io/nvidia/rapidsai/base:25.02-cuda12.8-py3.12
    container_name: data_pipeline
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
      - ./data:/app/data
      - ./queries:/app/queries
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=postgres
      - WEAVIATE_URL=http://weaviate:8080
      - RAPIDS_URL=http://rapids-processing:7500
    command: >
      python /app/scripts/data_pipeline.py 
      --query-file /app/queries/training_data.sql 
      --output /app/data/processed/training_data.jsonl
    depends_on:
      - postgres
      - weaviate
      - rapids-processing

volumes:
  postgres-data:
  weaviate-data: