name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      
      - name: Run tests
        run: |
          pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set environment variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENV=production" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=staging-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          fi
          echo "REGISTRY=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Web Layer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/ai-infrastructure/web-layer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/web-layer:${{ env.TAG }}
      
      # Similar steps for other layers
      - name: Build and push LLM Layer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/ai-infrastructure/llm-layer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/llm-layer:${{ env.TAG }}

      - name: Build and push MCP Layer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/ai-infrastructure/mcp-layer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/mcp-layer:${{ env.TAG }}

      - name: Build and push Training Layer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/ai-infrastructure/training-layer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/training-layer:${{ env.TAG }}

      - name: Build and push HPC Layer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/ai-infrastructure/hpc-layer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/hpc-layer:${{ env.TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set environment variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENV=production" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=staging-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          fi
          echo "REGISTRY=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
      
      - name: Deploy to environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/ai-infrastructure
            export REGISTRY=${{ env.REGISTRY }}
            export TAG=${{ env.TAG }}
            docker-compose -f docker-compose.${{ env.ENV }}.yml pull
            docker-compose -f docker-compose.${{ env.ENV }}.yml up -d